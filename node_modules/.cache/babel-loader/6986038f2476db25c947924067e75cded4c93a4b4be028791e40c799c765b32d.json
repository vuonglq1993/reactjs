{"ast":null,"code":"var _jsxFileName = \"/Users/macos/HTML CSS/hello-world/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './App.css'; // Import CSS file\n\n// function Counter() {\n//   const [like, setLike] = useState(0);\n//   const [angry, setAngry] = useState(0);\n//   const [sad, setSad] = useState(0);\n//   const [haha, setHaha] = useState(0);\n//   const [liked, setLiked] = useState(false);\n//   const [angered, setAngered] = useState(false);\n//   const [sadded, setSadded] = useState(false);\n//   const [hahaed, setHahaed] = useState(false);\n\n//   const handleLikeClick = () => {\n//     if (liked) {\n//       setLike(like - 1);\n//     } else {\n//       setLike(like + 1);\n//     }\n//     setLiked(!liked);\n//   };\n\n//   const handleAngryClick = () => {\n//     if (angered) {\n//       setAngry(angry - 1);\n//     } else {\n//       setAngry(angry + 1);\n//     }\n//     setAngered(!angered);\n//   };\n\n//   const handleSadClick = () => {\n//     if (sadded) {\n//       setSad(sad - 1);\n//     } else {\n//       setSad(sad + 1);\n//     }\n//     setSadded(!sadded);\n//   };\n\n//   const handleHahaClick = () => {\n//     if (hahaed) {\n//       setHaha(haha - 1);\n//     } else {\n//       setHaha(haha + 1);\n//     }\n//     setHahaed(!hahaed);\n//   };\n\n//   return (\n//     <div className=\"counter\">\n//       <div className=\"buttons\">\n//         <button className=\"like-btn\" onClick={handleLikeClick}>\n//           {liked ? 'dis👍' : '👍'}\n//         </button>\n//         <button className=\"angry-btn\" onClick={handleAngryClick}>\n//           {angered ? 'dis😡' : '😡'}\n//         </button>\n//         <button className=\"sad-btn\" onClick={handleSadClick}>\n//           {sadded ? 'dis😢' : '😢'}\n//         </button>\n//         <button className=\"haha-btn\" onClick={handleHahaClick}>\n//           {hahaed ? 'dis😂' : '😂'}\n//         </button>\n//       </div>\n//       <div className=\"reaction\">\n//         <h1 className=\"like-count\">👍 {like}</h1>\n//         <h1 className=\"angry-count\">😡 {angry}</h1>\n//         <h1 className=\"sad-count\">😢 {sad}</h1>\n//         <h1 className=\"haha-count\">😂 {haha}</h1>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Counter;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Captcha = ({\n  onChange\n}) => {\n  _s();\n  const [captchaText, setCaptchaText] = useState('');\n  const [inputText, setInputText] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  useEffect(() => {\n    generateCaptcha();\n  }, []);\n  const generateCaptcha = () => {\n    const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let captcha = '';\n    for (let i = 0; i < 6; i++) {\n      captcha += chars[Math.floor(Math.random() * chars.length)];\n    }\n    setCaptchaText(captcha);\n  };\n  const handleChange = e => {\n    const value = e.target.value;\n    setInputText(value);\n    setIsValid(value === captchaText);\n    onChange(value === captchaText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          padding: '10px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          fontSize: '20px',\n          marginRight: '10px',\n          letterSpacing: '3px'\n        },\n        children: captchaText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateCaptcha,\n        style: {\n          padding: '10px'\n        },\n        children: \"Reload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: handleChange,\n      placeholder: \"Enter CAPTCHA\",\n      style: {\n        marginTop: '10px',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n        width: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), inputText && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: isValid ? 'green' : 'red'\n      },\n      children: isValid ? 'CAPTCHA is correct' : 'CAPTCHA is incorrect'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Captcha, \"6fNoSphVi9NJMitVp9zvYIxIPwU=\");\n_c = Captcha;\nexport default Captcha;\nvar _c;\n$RefreshReg$(_c, \"Captcha\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Captcha","onChange","_s","captchaText","setCaptchaText","inputText","setInputText","isValid","setIsValid","generateCaptcha","chars","captcha","i","Math","floor","random","length","handleChange","e","value","target","children","style","display","alignItems","padding","backgroundColor","border","borderRadius","fontSize","marginRight","letterSpacing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","marginTop","width","color","_c","$RefreshReg$"],"sources":["/Users/macos/HTML CSS/hello-world/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './App.css'; // Import CSS file\n\n// function Counter() {\n//   const [like, setLike] = useState(0);\n//   const [angry, setAngry] = useState(0);\n//   const [sad, setSad] = useState(0);\n//   const [haha, setHaha] = useState(0);\n//   const [liked, setLiked] = useState(false);\n//   const [angered, setAngered] = useState(false);\n//   const [sadded, setSadded] = useState(false);\n//   const [hahaed, setHahaed] = useState(false);\n\n//   const handleLikeClick = () => {\n//     if (liked) {\n//       setLike(like - 1);\n//     } else {\n//       setLike(like + 1);\n//     }\n//     setLiked(!liked);\n//   };\n\n//   const handleAngryClick = () => {\n//     if (angered) {\n//       setAngry(angry - 1);\n//     } else {\n//       setAngry(angry + 1);\n//     }\n//     setAngered(!angered);\n//   };\n\n//   const handleSadClick = () => {\n//     if (sadded) {\n//       setSad(sad - 1);\n//     } else {\n//       setSad(sad + 1);\n//     }\n//     setSadded(!sadded);\n//   };\n\n//   const handleHahaClick = () => {\n//     if (hahaed) {\n//       setHaha(haha - 1);\n//     } else {\n//       setHaha(haha + 1);\n//     }\n//     setHahaed(!hahaed);\n//   };\n\n//   return (\n//     <div className=\"counter\">\n//       <div className=\"buttons\">\n//         <button className=\"like-btn\" onClick={handleLikeClick}>\n//           {liked ? 'dis👍' : '👍'}\n//         </button>\n//         <button className=\"angry-btn\" onClick={handleAngryClick}>\n//           {angered ? 'dis😡' : '😡'}\n//         </button>\n//         <button className=\"sad-btn\" onClick={handleSadClick}>\n//           {sadded ? 'dis😢' : '😢'}\n//         </button>\n//         <button className=\"haha-btn\" onClick={handleHahaClick}>\n//           {hahaed ? 'dis😂' : '😂'}\n//         </button>\n//       </div>\n//       <div className=\"reaction\">\n//         <h1 className=\"like-count\">👍 {like}</h1>\n//         <h1 className=\"angry-count\">😡 {angry}</h1>\n//         <h1 className=\"sad-count\">😢 {sad}</h1>\n//         <h1 className=\"haha-count\">😂 {haha}</h1>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Counter;\n\nimport React, { useState, useEffect } from 'react';\n\nconst Captcha = ({ onChange }) => {\n  const [captchaText, setCaptchaText] = useState('');\n  const [inputText, setInputText] = useState('');\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    generateCaptcha();\n  }, []);\n\n  const generateCaptcha = () => {\n    const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let captcha = '';\n    for (let i = 0; i < 6; i++) {\n      captcha += chars[Math.floor(Math.random() * chars.length)];\n    }\n    setCaptchaText(captcha);\n  };\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setInputText(value);\n    setIsValid(value === captchaText);\n    onChange(value === captchaText);\n  };\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <span\n          style={{\n            padding: '10px',\n            backgroundColor: '#f0f0f0',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            fontSize: '20px',\n            marginRight: '10px',\n            letterSpacing: '3px'\n          }}\n        >\n          {captchaText}\n        </span>\n        <button onClick={generateCaptcha} style={{ padding: '10px' }}>Reload</button>\n      </div>\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={handleChange}\n        placeholder=\"Enter CAPTCHA\"\n        style={{\n          marginTop: '10px',\n          padding: '10px',\n          borderRadius: '4px',\n          border: '1px solid #ccc',\n          width: '200px'\n        }}\n      />\n      {inputText && (\n        <p style={{ color: isValid ? 'green' : 'red' }}>\n          {isValid ? 'CAPTCHA is correct' : 'CAPTCHA is incorrect'}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Captcha;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}